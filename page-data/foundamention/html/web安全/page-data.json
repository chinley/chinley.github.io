{"componentChunkName":"component---src-templates-blog-post-js","path":"/foundamention/html/web安全/","result":{"data":{"site":{"siteMetadata":{"title":"chinley's blog"}},"markdownRemark":{"id":"61f9c345-f9e2-5f00-9e2a-9419a6cc482e","excerpt":"CSRF   跨站请求伪造，伪造用户发起请求。比方说b页面有用户的信息，a页面对b页面发起请求，请求中带有目标页面也就是b页面的cookie，从而伪造请求   解决 设置samesite属性，不允许cookie随着跨域请求发送 referer check 检查请求refer，不过无法预防xss…","html":"<h2>CSRF</h2>\n<p>  跨站请求伪造，伪造用户发起请求。比方说b页面有用户的信息，a页面对b页面发起请求，请求中带有目标页面也就是b页面的cookie，从而伪造请求</p>\n<p>  解决</p>\n<ul>\n<li>设置samesite属性，不允许cookie随着跨域请求发送</li>\n<li>referer check 检查请求refer，不过无法预防xss攻击</li>\n<li>请求加签</li>\n<li>验证码</li>\n</ul>\n<h2>XSS</h2>\n<p>  跨站脚本攻击，通过给别人发送带有<strong>恶意脚本代码参数的url或者是表单提交</strong></p>\n<p>  解决：</p>\n<ul>\n<li>设置Header中的Content-Security-Policy，明确告诉浏览器哪些资源可以加载和执行</li>\n</ul>","frontmatter":{"title":"CSRF与XSS","date":"May 28, 2022","description":null}},"previous":{"fields":{"slug":"/foundamention/html/cookie作用域/"},"frontmatter":{"title":"cookie在同域名不同端口可以共享吗"}},"next":{"fields":{"slug":"/http/基础篇/"},"frontmatter":{"title":"透视HTTP协议"}}},"pageContext":{"id":"61f9c345-f9e2-5f00-9e2a-9419a6cc482e","previousPostId":"6f558a2d-dac8-52f5-b551-f16351c94094","nextPostId":"e35cfae2-861b-5721-b507-fe15cdfb7135"}},"staticQueryHashes":["2841359383","788015585"]}