{"componentChunkName":"component---src-templates-blog-post-js","path":"/foundamention/call和apply/","result":{"data":{"site":{"siteMetadata":{"title":"chinley's blog"}},"markdownRemark":{"id":"ecbaa1cb-7843-5359-b4f7-2462ec170b66","excerpt":"什么是call   call方法在使用一个指定的this值和若干个指定的参数值的前提下调用某个函数或方法 call改变了this的指向，指向到foo bar函数执行了 call与apply的区别 foo.call(bar, ‘kevin’, 18);\nfoo.call(bar, ‘kevin’, 18); bind…","html":"<h4>什么是call</h4>\n<p>  call方法在使用一个指定的this值和若干个指定的参数值的前提下调用某个函数或方法</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">foo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> bar <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  value<span class=\"token operator\">:</span> <span class=\"token number\">4</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">foo</span><span class=\"token punctuation\">.</span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>bar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">Function</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">call2</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">context</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> _context <span class=\"token operator\">=</span> context <span class=\"token operator\">||</span> window<span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 用this获取调用call2的函数</span>\n  _context<span class=\"token punctuation\">.</span>fn <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> _args <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>arguments<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> _context<span class=\"token punctuation\">.</span><span class=\"token function\">fn</span><span class=\"token punctuation\">(</span>_args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">delete</span> _context<span class=\"token punctuation\">.</span>fn\n  <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nfoo<span class=\"token punctuation\">.</span><span class=\"token function\">call2</span><span class=\"token punctuation\">(</span>bar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol>\n<li>call改变了this的指向，指向到foo</li>\n<li>bar函数执行了</li>\n</ol>\n<h4>call与apply的区别</h4>\n<p>foo.call(bar, ‘kevin’, 18);\nfoo.call(bar, [‘kevin’, 18]);</p>\n<h4>bind</h4>\n<p>  bind() 方法会创建一个新函数。当这个新函数被调用时，bind() 的第一个参数将作为它运行时的 this，之后的一序列参数将会在传递的实参前传入作为它的参数。</p>","frontmatter":{"title":"js深入之call和apply的模拟实现","date":"February 27, 2022","description":"读书笔记"}},"previous":{"fields":{"slug":"/foundamention/react/虚拟dom/"},"frontmatter":{"title":"React之虚拟dom"}},"next":{"fields":{"slug":"/foundamention/react/hooks相关/"},"frontmatter":{"title":"react hooks"}}},"pageContext":{"id":"ecbaa1cb-7843-5359-b4f7-2462ec170b66","previousPostId":"d3cc5473-87ea-5692-a3ce-005844d0b502","nextPostId":"9e22ed81-35ae-5461-a348-11a5c680c9cd"}},"staticQueryHashes":["2841359383","788015585"]}