{"componentChunkName":"component---src-templates-index-js","path":"/4","result":{"data":{"site":{"siteMetadata":{"title":"chinley's blog"}},"allMarkdownRemark":{"nodes":[{"excerpt":"react hooks 相关阅读 「react进阶」一文吃透react-hooks原理 https://juejin.cn/post/6944863057000529933 为什么需要react hooks 在react hooks…","fields":{"slug":"/foundamention/react/hooks相关/"},"frontmatter":{"date":"March 31, 2022","title":"react hooks","description":"笔记-- 「一文吃透react-hooks原理」","category":"REACT"}},{"excerpt":"什么虚拟dom   平时编写react时候，使用jsx语法糖，经过babel编译后会被转成一个个的createElement的方法。而createElement方法返回的描述dom节点对象就是虚拟dom。\n  虚拟dom是一种模式，是对ui…","fields":{"slug":"/foundamention/react/虚拟dom/"},"frontmatter":{"date":"March 22, 2022","title":"React之虚拟dom","description":null,"category":"REACT"}},{"excerpt":"什么是call   call方法在使用一个指定的this值和若干个指定的参数值的前提下调用某个函数或方法 call改变了this的指向，指向到foo bar函数执行了 call与apply的区别 foo.call(bar, ‘kevin’, 18);\nfoo.call(bar…","fields":{"slug":"/foundamention/call和apply/"},"frontmatter":{"date":"February 27, 2022","title":"js深入之call和apply的模拟实现","description":"读书笔记","category":"JS"}},{"excerpt":"JavaScript…","fields":{"slug":"/foundamention/事件循环/"},"frontmatter":{"date":"February 22, 2022","title":"事件循环，宏任务与微任务","description":null,"category":"JS"}},{"excerpt":"传统diff 计算两棵树形结构差异并进行转换，传统diff算法的做法：循环递归每一个节点\ndom diff 比如左侧树a节点依次进行对比，a->e、a->d、a->b、a->c、a->a，左侧其他节点也是，算法复杂度能达到O(n^…","fields":{"slug":"/foundamention/react/diff/"},"frontmatter":{"date":"February 22, 2022","title":"与其他框架相比，React 的 diff 算法有何不同","description":null,"category":"REACT"}},{"excerpt":"合成事件   合成事件的触发基于浏览器的事件机制，通过冒泡机制冒泡到最顶层元素，然后再由dispatchEvent统一处理 浏览器事件机制   捕获阶段（父到子） -> 获取到目标元素 -> 冒泡阶段（子到父）\n  Q:若对合成事件进行阻止，原生事件是否会执行。会\n  A…","fields":{"slug":"/foundamention/react/合成事件/"},"frontmatter":{"date":"February 22, 2022","title":"React之合成事件","description":null,"category":"REACT"}},{"excerpt":"setState是同步还是异步   react是会合并setstate的操作，避免多次渲染更新页面，造成一种异步的假象。React内部有一个全局唯一的标识(isBatchingUpdates)来表示是否进行合并更新。当生命周期函数或合成事件开始执行前，标识会设为true…","fields":{"slug":"/foundamention/react/setState/"},"frontmatter":{"date":"February 22, 2022","title":"React之setState","description":null,"category":"REACT"}},{"excerpt":"为什么引入Fiber这个架构 JavaScript是单线程的并且它和ui渲染线程是互斥的。在React实现fiber架构之前，virtual dom(react.createElement，记录节点属性和children)形成的virtual dom tree，dom diff…","fields":{"slug":"/foundamention/react/fiber/"},"frontmatter":{"date":"February 22, 2022","title":"React之about fiber","description":null,"category":"REACT"}}]}},"pageContext":{"currentPage":4,"totalPage":7,"limit":8,"skip":24,"categories":["杂记","算法","JS","REACT","HTML","阅读笔记"]}},"staticQueryHashes":["2841359383","788015585"]}