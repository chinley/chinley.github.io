{"componentChunkName":"component---src-templates-blog-post-js","path":"/leetcode/bag/","result":{"data":{"site":{"siteMetadata":{"title":"chinley's blog"}},"markdownRemark":{"id":"3552c50b-d4ae-57dd-93ac-4e899f124f6f","excerpt":"背包问题 单词就是物品，字符串s就是背包，单词能否组成字符串s, 就是问物品能不能把背包装满。\n拆分时可以重复使用字典中的单词，说明就是一个完全背包。\n动态规划分析五部曲： 1.确定dp数组以及下标的含义\ndpi：字符串长度为i的话，dpi为true，表示可以拆分为一个或多个在字段中出现的单词。…","html":"<h3>背包问题</h3>\n<p>单词就是物品，字符串s就是背包，单词能否组成字符串s, 就是问物品能不能把背包装满。\n拆分时可以重复使用字典中的单词，说明就是一个完全背包。\n动态规划分析五部曲：</p>\n<ul>\n<li>1.确定dp数组以及下标的含义\ndp[i]：字符串长度为i的话，dp[i]为true，表示可以拆分为一个或多个在字段中出现的单词。</li>\n<li>2.确定递推公式\n如果确定dp[j]是true,且[i,j]这个区间的子串出现在字典里，那么dp[i]一定是true。所以递推公式是if([j,i]这个区间的子串出现在字典里&#x26;&#x26;dp[j]===true), 那么dp[i]是true</li>\n<li>3.dp数组如何初始化\n从递归公式中可以看出，dp[i]的状态依靠dp[j]是否为true，dp[0]就是递归的根基，dp[0]一定要为true。\n下标非0的dp[i]初始化为false，只要没有被覆盖说明都是不分拆分一分或多个在字典中出现的单词</li>\n<li>4.确定遍历顺序\n如果求组合数就是外层for循环遍历物品，内层for遍历背包\n如果求排列数就是外层for遍历背包，内层for循环遍历物品</li>\n<li>5.举例推导dp数组</li>\n</ul>\n<h3>01背包</h3>\n<p>  有n件物品和一个最多能背重量为w的背包。第i件物品的重量是weight[i]，得到的价值是value[i]，每件物品只能用一次，求解将哪些物品装进背包里物品价值总和最大</p>\n<ol>\n<li>确定dp数组以及下标的含义，使用二位数组，即<strong>dp[i][j]表示从下表为[0-i]的物品里任意取，放进容量为j的背包，价值总和最大食多少</strong>。</li>\n<li>确定递推公式\ndp[i][j]的含义：从下标为[0-i]的物品里任意取，放进容量为j的背包，价值总和最大是多少。那么有两个方向推出来dp[i][j]</li>\n<li>不放物品i:背包容量为j,里面不放物品i的最大价值，此时dp[i][j]就是dp[i-1][j]</li>\n<li>放物品i: dp[i-1]j-weight[i]]为背包容量为j-weight[i]的时候不放物品i的最大价值，那么dp[i-1]j-weight[i]] + value[i]，就是背包放物品i得到的最大价值</li>\n</ol>\n<p>  所以递归公式：dp[i][j] = max(dp[i-1][j], dp[i-1]j-weight[i]]+value[i])</p>\n<ol start=\"3\">\n<li>dp数组如何初始化\n如果背包容量j为0的话，即dp[i][0]，无论是选取哪些物品，都放不进背包里，背包价值总和一定是0。\ndp[0][j], 即：i为0，存放编号0的物品的时候，各个容量的背包所能存放的最大价值。\n那么当j&#x3C;weight[0]时，dp[0][j]应该是0，因为背包容量比编号0的物品重量还小。\n当j>weight[0]时，dp[0][j]应该是value[0]，因为背包容量足够放编号0物品。</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;</span> weight<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> weight<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> badweight<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"4\">\n<li>确定遍历顺序\n先遍历物品还是先遍历背包重量， 都ok</li>\n<li>举例推导dp数组</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">testWeightBagProblem</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">wight<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">,</span> size</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> len <span class=\"token operator\">=</span> wight<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> \n    dp <span class=\"token operator\">=</span> Array<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>length<span class=\"token operator\">:</span> len <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">Array</span><span class=\"token punctuation\">(</span>size <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> len<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> j <span class=\"token operator\">&lt;=</span> size<span class=\"token punctuation\">;</span> j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>wight<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> j<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>\n          dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> \n          value<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j <span class=\"token operator\">-</span> wight<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> dp<span class=\"token punctuation\">[</span>i <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> dp<span class=\"token punctuation\">[</span>len<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>size<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h6>相关阅读</h6>\n<p>代码随想录 <a href=\"https://leetcode-cn.com/problems/word-break/solution/dai-ma-sui-xiang-lu-139-dan-ci-chai-fen-50a1a/\">https://leetcode-cn.com/problems/word-break/solution/dai-ma-sui-xiang-lu-139-dan-ci-chai-fen-50a1a/</a></p>","frontmatter":{"title":"动态规划之背包问题","date":"December 26, 2021","description":"背包背包背包笔记"}},"previous":{"fields":{"slug":"/leetcode/tree/"},"frontmatter":{"title":"JS中的树数据结构"}},"next":{"fields":{"slug":"/foundamention/原型与原型链/"},"frontmatter":{"title":"js深入之从原型到原型链"}}},"pageContext":{"id":"3552c50b-d4ae-57dd-93ac-4e899f124f6f","previousPostId":"1eee51d5-b225-53de-9f2f-fb1eef872e20","nextPostId":"3101eea9-8667-599d-8075-762084005520"}},"staticQueryHashes":["2841359383","788015585"]}