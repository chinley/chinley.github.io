{"componentChunkName":"component---src-templates-blog-post-js","path":"/leetcode/二叉搜索树/","result":{"data":{"site":{"siteMetadata":{"title":"chinley's blog"}},"markdownRemark":{"id":"1c5cb00e-2a7c-50eb-b91c-2c4e8407bc93","excerpt":"二叉搜索树   二叉搜索树，又叫二叉排序树，它可以是颗空树，或是具有以下性质的二叉树：若它的左子树不空，则左子树上所有节点的值均小于它的根节点的值；若它的右子树不空，则右子树上所有节点的值均大于它根节点的值。 不同的二叉搜索树 给你一个整数 n ，求恰由 n 个节点组成且节点值从 1 到 n…","html":"<h2>二叉搜索树</h2>\n<p>  二叉搜索树，又叫二叉排序树，它可以是颗空树，或是具有以下性质的二叉树：若它的左子树不空，则左子树上所有节点的值均小于它的根节点的值；若它的右子树不空，则右子树上所有节点的值均大于它根节点的值。</p>\n<h3>不同的二叉搜索树</h3>\n<p>给你一个整数 n ，求恰由 n 个节点组成且节点值从 1 到 n 互不相同的 二叉搜索树 有多少种？返回满足题意的二叉搜索树的种数。</p>\n<p><img src=\"https://assets.leetcode.com/uploads/2021/01/18/uniquebstn3.jpg\" alt=\"proto\"></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">输入：n=3\n输出：5</code></pre></div>\n<p>假设n个节点存在的二叉搜索树是G(n),令f(i)为以i为根的二叉搜索树的个数，那么G(n) = f(0) + f(1) + … + f(n-1) + f(n)\n当i为根节点时，左子树节点个数为i-1，右子树的节点为n-i, 那么f(i) = G(i-1) * G(n-i)\nG(n) = G(0)<em>G(n-1) + G(1)</em>G(n-2) +…+ G(n-1)*G(0)</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">numTrees</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> dp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Array</span><span class=\"token punctuation\">(</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    dp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>dp<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> j<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;=</span>i<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// dp[3] = dp[2]dp[0] + dp[1]dp[1] + dp[0]dp[2]</span>\n            dp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> dp<span class=\"token punctuation\">[</span>j<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> dp<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// console.log(dp);</span>\n    <span class=\"token keyword\">return</span> dp<span class=\"token punctuation\">[</span>n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span> </code></pre></div>","frontmatter":{"title":"二叉搜索树","date":"May 16, 2023","description":null}},"previous":{"fields":{"slug":"/foundamention/html/灰度/"},"frontmatter":{"title":"灰度思路"}},"next":{"fields":{"slug":"/live/svg动画/"},"frontmatter":{"title":"SVG动画实践"}}},"pageContext":{"id":"1c5cb00e-2a7c-50eb-b91c-2c4e8407bc93","previousPostId":"866cde58-4112-5e7e-b7f0-1ac8ef76beb4","nextPostId":"4e1391ff-4676-50a9-b18b-86afa7be94be"}},"staticQueryHashes":["2841359383","788015585"]}