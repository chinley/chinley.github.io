{"componentChunkName":"component---src-templates-index-js","path":"/2","result":{"data":{"site":{"siteMetadata":{"title":"chinley's blog"}},"allMarkdownRemark":{"nodes":[{"excerpt":"什么是闭包   闭包是指那些能访问自由变量（在函数中使用的既不是函数局部的变量，又不是函数参数的变量）的函数   闭包 = 函数 + 自由变量   ECMAScript…","fields":{"slug":"/foundamention/闭包/"},"frontmatter":{"date":"February 12, 2022","title":"js深入之闭包","description":null,"category":"js"}},{"excerpt":"防抖   你尽管触发事件，但我一定在事件触发n秒后才执行，如果在一个事件触发的n秒内又触发了这个事件，就以新的事件的事件为准, n秒后才执行。总是触发完事件n…","fields":{"slug":"/foundamention/防抖与节流/"},"frontmatter":{"date":"February 12, 2022","title":"防抖与节流","description":null,"category":"js"}},{"excerpt":"文章导读 https://github.com/mqyqingfeng/Blog/issues/3 静态作用域vs动态作用域 JavaScript…","fields":{"slug":"/foundamention/作用域/"},"frontmatter":{"date":"February 08, 2022","title":"js深入之词法作用域和动态作用域","description":"读书笔记","category":"js"}},{"excerpt":"文章导读 https://github.com/mqyqingfeng/Blog/issues/16 继承   原型链继承、借用构造函数、组合继承、原型式继承 继承的方式 原型链继承：child构造函数的prototype指向parent…","fields":{"slug":"/foundamention/继承/"},"frontmatter":{"date":"February 08, 2022","title":"js深入之继承的多种方式和优缺点","description":null,"category":"js"}},{"excerpt":"当JavaScript代码执行一段可执行代码时，会创建对应执行上下文。执行上下文有三个关键部分： this的绑定 变量对象/词法环境的创建 活动对象/变量环境的创建","fields":{"slug":"/foundamention/变量对象/"},"frontmatter":{"date":"February 08, 2022","title":"js深入之变量对象","description":null,"category":"js"}},{"excerpt":"学习文章 https://github.com/mqyqingfeng/Blog/issues/2 proto QA 什么是原型   每一个JavaScript对象(null…","fields":{"slug":"/foundamention/原型与原型链/"},"frontmatter":{"date":"February 07, 2022","title":"js深入之从原型到原型链","description":"读书笔记","category":"js"}},{"excerpt":"背包问题 单词就是物品，字符串s就是背包，单词能否组成字符串s, 就是问物品能不能把背包装满。\n拆分时可以重复使用字典中的单词，说明就是一个完全背包。\n动态规划分析五部曲： 1.确定dp数组以及下标的含义\ndpi：字符串长度为i的话，dpi为true…","fields":{"slug":"/leetcode/bag/"},"frontmatter":{"date":"December 26, 2021","title":"动态规划之背包问题","description":"背包背包背包笔记","category":"算法"}},{"excerpt":"树   树是一种被广泛应用的数据结构，例如： dom是一种树结构数据 os…","fields":{"slug":"/leetcode/tree/"},"frontmatter":{"date":"October 17, 2021","title":"JS中的树数据结构","description":"树的实现和遍历","category":"算法"}}]}},"pageContext":{"currentPage":2,"totalPage":4,"limit":8,"skip":8,"categories":["杂记","算法","js","react"]}},"staticQueryHashes":["2841359383","788015585"]}