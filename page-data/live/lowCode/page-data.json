{"componentChunkName":"component---src-templates-blog-post-js","path":"/live/lowCode/","result":{"data":{"site":{"siteMetadata":{"title":"chinley's blog"}},"markdownRemark":{"id":"f5803f95-d3e1-50c3-971d-9e1725bd3cf5","excerpt":"…","html":"<p>前端发展至今，各大公司推出了不同的可视化低代码平台，腾讯阿里等都有关于低代码的建设，对比传统的开发，可视化低代码能快速产出页面，适用于大量逻辑简单的推广展示页面、活动页面等，成熟的系统还可以让运营人员直接配置，解放开发人力。本文就主要对低代码技术进行研究，了解其架构和关键的技术。</p>\n<p>在正式探究前，先想一想这些问题：</p>\n<ol>\n<li>在页面编辑器中，拖拽出来的容器、图片等元素，怎么转换成页面数据</li>\n<li>编辑出来的页面数据，如何生成一个页面</li>\n<li>如何组装js与css逻辑到页面</li>\n<li>如何在dom节点上绑定配置的事件，点击事件、双击事件等等</li>\n<li>编辑器面板设计, 如何实现拖拽</li>\n<li>撤销与回滚</li>\n</ol>\n<h3>数据结构与渲染逻辑</h3>\n<p>页面本身是一种描述性的语言，通过html描述页面的各个节点，css描述节点的样式，js描述逻辑与人机交互等。</p>\n<p>在日常的组件化模块化开发中，一个页面由组件A+组件B+组件C+模块A+模块B等等组成，如果抽象成纯数据结构来表示这个页面，就可以用json来描述这个页面由组件a组件b组件c等组成。</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"> <span class=\"token property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"root\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">,</span>\n   <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">,</span>\n   <span class=\"token property\">\"parentId\"</span><span class=\"token operator\">:</span> <span class=\"token null keyword\">null</span><span class=\"token punctuation\">,</span>\n   <span class=\"token property\">\"childIds\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n   <span class=\"token property\">\"style\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"a\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span>\n   <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Section\"</span><span class=\"token punctuation\">,</span>\n   <span class=\"token property\">\"parentId\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"root\"</span><span class=\"token punctuation\">,</span>\n   <span class=\"token property\">\"childIds\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"c\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n   <span class=\"token property\">\"style\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"position\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"relative\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"minHeight\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"100px\"</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"c\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"c\"</span><span class=\"token punctuation\">,</span>\n   <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Image\"</span><span class=\"token punctuation\">,</span>\n   <span class=\"token property\">\"parentId\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span>\n   <span class=\"token property\">\"childIds\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n   <span class=\"token property\">\"props\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"WwvxTt\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"var(--猪猪.png)\"</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token property\">\"style\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"position\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"relative\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"display\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"flex\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"width\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"150px\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"height\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"150px\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"backgroundColor\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"red\"</span>\n   <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"b\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span>\n   <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Button\"</span><span class=\"token punctuation\">,</span>\n   <span class=\"token property\">\"parentId\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n   <span class=\"token property\">\"childIds\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n   <span class=\"token property\">\"props\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"b\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"content\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"点击显示列表\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"primary\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"events\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n     <span class=\"token property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"9a28f1766bd7\"</span><span class=\"token punctuation\">,</span>\n     <span class=\"token property\">\"triggerType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"CLICK\"</span><span class=\"token punctuation\">,</span>\n     <span class=\"token property\">\"action\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"showList\"</span><span class=\"token punctuation\">,</span>\n       <span class=\"token property\">\"params\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n     <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n   <span class=\"token property\">\"style\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"marginTop\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"10px\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"width\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"110px\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"height\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"43px\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"fontSize\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"14px\"</span>\n   <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>用一段json表示dom结构，每个是一个node，记录一个节点的父节点子节点、样式、dom类型、响应事件等信息。\n每个节点都有一些通用的行为，例如获取当前节点信息、更新节点样式、子节点的增删改查、修改父节点指向等。\n那对于整段节点的结构来说，就应该有新增节点、移除节点、移动节点的操作。</p>\n<p>了解到存储的数据结构之后，那么用户对于编辑器中通过拖拽方式的添加组件、挪动组件、删除组件、设置组件样式等等的操作，其实都是在往这个json数据上做调整，数据变更驱动视图的更新。</p>\n<p>那么json数据如何映射到我们的画布上呢？</p>\n<p>渲染器的渲染逻辑是从根节点开始，通过不断递归解析这份树状结构的视图数据，通过动态组件的方式显示到页面中。\n拿react举例， 渲染的关键代码：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">renderContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> rootNodes <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> item<span class=\"token punctuation\">.</span>parentId <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">function</span> <span class=\"token function\">getChildren</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">node</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> type<span class=\"token operator\">:</span> Type<span class=\"token punctuation\">,</span> style<span class=\"token punctuation\">,</span> props <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> node<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>Type style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>style<span class=\"token punctuation\">}</span> props<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span> node<span class=\"token operator\">?.</span>childIds<span class=\"token operator\">?.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">getChildren</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Type<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> rootNodes<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token function\">getChildren</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>实际情况上述代码会更加复杂，比方修改的属性如何传递到组件中，类名拼接等等，每个组件都要经历相同的数据加工、注入一些必要功能等的过程，此时可以运用高阶组件来抽离逻辑。</p>\n<p>上述json里的type都是dom支持的元素，拿a来说，a的type是Section, 渲染逻辑返回的就是&#x3C;Section />, 那列表怎么办，并没有一个&#x3C;List />，要如何渲染？</p>\n<p>列表渲染：</p>\n<p>列表：\n组件选择列表，拖动到编辑中，在编辑器中编辑的是每一项数据item的样式，非整个列表。编辑完的列表的json数据结构like:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"a\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"List\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"childIds\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"props\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"dataKey\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"list\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"data\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n <span class=\"token property\">\"b\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Section\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"childIds\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"c,d\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"c\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Image\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"childIds\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"props\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"WwvxTt\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"src\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"dataKey\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"listImage\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"d\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"p\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"childIds\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"props\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"key\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"WwvxTta\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"contentText\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"dataKey\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"listRank\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>上面的json结构表示a是一个列表，绑定的数据是list。列表的children只有一个是b, b表示列表中每个item的节点，由图片节点c和文本节点d组成。配置节点d的文本对应列表数据字段是listRank, 图片c的资源路径对应列表数据字段的listImage。</p>\n<p>假设list数据是这样的：[{listRank: 1, listImage: ‘image1’ }, {listRank: 2, listImage: ‘image2’}]，那我们需要把数据转变为json上节点数据。</p>\n<p>即从[{listRank: 1, listImage: ‘image1’ }, {listRank: 2, listImage: ‘image2’}] 转变成</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    id<span class=\"token operator\">:</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">'Section'</span><span class=\"token punctuation\">,</span>\n    childrens<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n      id<span class=\"token operator\">:</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">'image'</span><span class=\"token punctuation\">,</span>\n      props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        src<span class=\"token operator\">:</span> <span class=\"token string\">'image1'</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      id<span class=\"token operator\">:</span> <span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span>\n      props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        contentText<span class=\"token operator\">:</span> <span class=\"token number\">1</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n <span class=\"token punctuation\">{</span>\n    id<span class=\"token operator\">:</span> <span class=\"token string\">'b'</span><span class=\"token punctuation\">,</span>\n    type<span class=\"token operator\">:</span> <span class=\"token string\">'Section'</span><span class=\"token punctuation\">,</span>\n    childrens<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n      id<span class=\"token operator\">:</span> <span class=\"token string\">'c'</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">'image'</span><span class=\"token punctuation\">,</span>\n      props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        src<span class=\"token operator\">:</span> <span class=\"token string\">'image2'</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      id<span class=\"token operator\">:</span> <span class=\"token string\">'d'</span><span class=\"token punctuation\">,</span>\n      type<span class=\"token operator\">:</span> <span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span>\n      props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        contentText<span class=\"token operator\">:</span> <span class=\"token number\">2</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<p>再改造一下渲染逻辑生成列表子节点。\nList组件可以认为是业务组件的一种，其他自定义组件也可以封装，在内部处理数据与节点属性的映射，再对于基础组件进行动态渲染。</p>\n<p>清楚了数据结构和渲染逻辑之后，那么存到服务器中的数据，也同样是这份json数据，页面链接根据id查询json结构, 客户端再通过渲染逻辑解析成真实的dom节点。</p>\n<p>基本的网页由html+css+js组成，除了元素的布局之外，我们还需要有额外的逻辑处理和css样式注入，那这一部分如何注入到我们生成的页面中呢？</p>\n<h3>js与css注入</h3>\n<p>css和js在编辑器中编辑，保存在接口中。在打开页面时查询，js动态插入style</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 获取到接口css内容后执行</span>\n<span class=\"token function\">insertCss</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">css</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>css<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> styleNode <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'style'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    styleNode<span class=\"token punctuation\">.</span>type <span class=\"token operator\">=</span> <span class=\"token string\">'text/css'</span><span class=\"token punctuation\">;</span>\n    styleNode<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">createTextNode</span><span class=\"token punctuation\">(</span>css<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    document<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>styleNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>js的数据同理，接口保存打包编译好的js文件名，通过loadScript的方式加载脚本并执行。为了减少请求脚本的时长，也可以在生成页面时注入script数据。在打开页面时执行。</p>\n<h3>事件系统</h3>\n<p>页面通常需要交互，点击、双击等事件的绑定和监听必不可少，这就需要给我们的组件添加事件系统。</p>\n<p>事件系统的核心就是运用观察者模式，分发注册的事件名，在代码编辑中做监听</p>\n<p>编辑器中编辑一个button元素点击事件为onBtnClick，生成的数据结构如：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token string\">\"a\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token string\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"button\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"childIds\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">\"props\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"key\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"WwvxTta\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"contentText\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"点击\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">\"trigger\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n      <span class=\"token string\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"CLICK\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"onBtnClick\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>dom元素事件可以通过高阶组件包裹，赋予不同的事件的监听，onClick、onMouseEnter等等，当点击时trigger onBtnClick, 在代码编辑中</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">Event<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'onBtnClick'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// do something</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>以此实现一个对click事件的监听与响应。</p>\n<h3>编辑器设计</h3>\n<p>之前我们探究的是一份低代码数据如何生成一个页面，那编辑器的作用就是设置这份数据。</p>\n<p>通常编辑器的布局是左边组件区，中间画布，右边为节点属性设置区。生成的页面布局数据结构同保存在服务端的一致，这样在画布中的渲染逻辑就可以复用，不同的是在画布中的元素渲染不需要事件的绑定，js与css的注入等等，但是需要可选中，移动等等。</p>\n<p>在编辑器中最重要的功能就是拖拽，从组件区拖拽组建到画布来添加组件，或者是画布里组件之间的拖拽以改变布局。那拖拽功能的实现可以利用react-dnd库，监听drop事件来决定是添加组件还是改变父节点指向。</p>\n<p>一个react-dnd示例</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> DndProvider<span class=\"token punctuation\">,</span> useDrag<span class=\"token punctuation\">,</span> useDrop <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dnd'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HTML5Backend <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dnd-html5-backend'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">DraggableBodyRow</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> index<span class=\"token punctuation\">,</span> moveRow<span class=\"token punctuation\">,</span> className<span class=\"token punctuation\">,</span> style<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>restProps <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> type <span class=\"token operator\">=</span> <span class=\"token string\">'DraggableBodyRow'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> ref <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> isOver<span class=\"token punctuation\">,</span> dropClassName <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> drop<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useDrop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    accept<span class=\"token operator\">:</span> type<span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">collect</span><span class=\"token operator\">:</span> <span class=\"token parameter\">monitor</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> index<span class=\"token operator\">:</span> dragIndex <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> monitor<span class=\"token punctuation\">.</span><span class=\"token function\">getItem</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dragIndex <span class=\"token operator\">===</span> index<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n        isOver<span class=\"token operator\">:</span> monitor<span class=\"token punctuation\">.</span><span class=\"token function\">isOver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        dropClassName<span class=\"token operator\">:</span> dragIndex <span class=\"token operator\">&lt;</span> index <span class=\"token operator\">?</span> <span class=\"token string\">' drop-over-downward'</span> <span class=\"token operator\">:</span> <span class=\"token string\">' drop-over-upward'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">drop</span><span class=\"token operator\">:</span> <span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">moveRow</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">,</span> drag<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useDrag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    type<span class=\"token punctuation\">,</span>\n    item<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> index <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">collect</span><span class=\"token operator\">:</span> <span class=\"token parameter\">monitor</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      isDragging<span class=\"token operator\">:</span> monitor<span class=\"token punctuation\">.</span><span class=\"token function\">isDragging</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">drop</span><span class=\"token punctuation\">(</span><span class=\"token function\">drag</span><span class=\"token punctuation\">(</span>ref<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>tr\n      ref<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>ref<span class=\"token punctuation\">}</span>\n      className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>className<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>isOver <span class=\"token operator\">?</span> dropClassName <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span>\n      style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> cursor<span class=\"token operator\">:</span> <span class=\"token string\">'move'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>style <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>restProps<span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">&lt;</span>DndProvider backend<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>HTML5Backend<span class=\"token punctuation\">}</span><span class=\"token operator\">></span> <span class=\"token comment\">// DndProvider包裹需要拖动和监听的元素</span>\n  <span class=\"token operator\">&lt;</span>Table\n    columns<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>cols<span class=\"token punctuation\">}</span>\n    data<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>stars<span class=\"token punctuation\">}</span>\n    components<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>components<span class=\"token punctuation\">}</span>\n    onRow<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">record<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      index<span class=\"token punctuation\">,</span>\n      moveRow<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n    pagination<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span>\n    scroll<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> y<span class=\"token operator\">:</span> <span class=\"token number\">350</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n    bordered<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span>\n    rowKey<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> item<span class=\"token punctuation\">.</span>kugouId<span class=\"token punctuation\">}</span>\n    emptyText<span class=\"token operator\">=</span><span class=\"token string\">\"暂无数据\"</span>\n  <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>DndProvider<span class=\"token operator\">></span></code></pre></div>\n<p>如果固定死画布层的宽度，会影响实际页面的效果尤其是移动端的网页，需要做页面适配。因此画布层可以通过iframe来展示，结合根结点font-size+rem，来模拟实际效果。</p>\n<p>同时为了渲染逻辑清晰，避免与修改节点逻辑杂糅，画布可分为辅助工具层、渲染层、逻辑层。</p>\n<h3>撤销与回滚</h3>\n<p>在编辑器中撤销的功能就是数据状态回退，适用redux-undo这个库可以轻松实现Redux 状态树中的撤销和重做。</p>\n<p>……to be continued</p>","frontmatter":{"title":"低代码平台","date":"October 04, 2023","description":null}},"previous":{"fields":{"slug":"/live/svg动画/"},"frontmatter":{"title":"SVG动画实践"}},"next":null},"pageContext":{"id":"f5803f95-d3e1-50c3-971d-9e1725bd3cf5","previousPostId":"4e1391ff-4676-50a9-b18b-86afa7be94be","nextPostId":null}},"staticQueryHashes":["2841359383","788015585"]}