{"componentChunkName":"component---src-templates-blog-post-js","path":"/live/blob视频地址/","result":{"data":{"site":{"siteMetadata":{"title":"chinley's blog"}},"markdownRemark":{"id":"318736b2-8a29-551b-a4c1-4ea6c9add636","excerpt":"相关阅读 为什么视频网站的视频链接地址是blob？ 最近看到很多视频网站的视频src都是以blob:xxxxx的格式，探究一下这个blob是什么，以及为什么要这么做 what is Blob   在MDN的介绍中，Blob…","html":"<h6>相关阅读</h6>\n<p><a href=\"https://juejin.cn/post/6844903880774385671\">为什么视频网站的视频链接地址是blob？</a></p>\n<p>最近看到很多视频网站的视频src都是以blob:xxxxx的格式，探究一下这个blob是什么，以及为什么要这么做</p>\n<h5>what is Blob</h5>\n<p>  在MDN的介绍中，Blob 对象表示一个<strong>不可变</strong>、原始数据的<strong>类文件对象</strong>。它的数据可以按文本或二进制的格式进行读取，也可以转换成 ReadableStream 来用于数据操作。</p>\n<p>  File 接口基于 Blob，继承了 blob 的功能并将其扩展以支持用户系统上的文件。</p>\n<h5>Blob URL</h5>\n<p>  Blob URL就是blob协议的URL, 将文件资源生成一个指向Blob的地址，就可以用在video、audio、img等这些标签的src属性上。通过<strong>URL.createObjectURL()</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> blobUrl <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>object<span class=\"token punctuation\">)</span></code></pre></div>\n<p>  生成的链接就是以blob开头的一段地址，表示指向的是一个二进制数据。每调用一次URL.createObjectURL方法，就会得到一个不一样的Blob URL。这个URL存在的时间，等同于网页的存在时间。<strong>一旦网页刷新或卸载，这个Blob URL就失效</strong>。</p>\n<p>  通过URL.revokeObjectURL(objectURL)可以释放URL对象。</p>\n<h5>应用</h5>\n<ul>\n<li>图片预览</li>\n<li>加载网络视频。需要请求完全部视频数据才能播放。如果要边播边放，则需要流媒体。</li>\n</ul>\n<h5>流媒体协议相关</h5>\n<ul>\n<li>HLS和DASH, 苹果公司实现的，m3u8的格式</li>\n<li>MediaSource. 用Blob URL指向一个视频二进制数据，然后不断将下一段视频的二进制数据添加拼接进去。通过MediaSource.appendBuffer方法往容器里添加数据。但是不能直接用MP4视频，需要用Fragmented MP4</li>\n</ul>","frontmatter":{"title":"为什么视频网站的视频链接地址是blob","date":"September 05, 2022","description":null}},"previous":{"fields":{"slug":"/live/连麦与pk/"},"frontmatter":{"title":"连麦与pk--占坑"}},"next":{"fields":{"slug":"/foundamention/模块化/"},"frontmatter":{"title":"模块化"}}},"pageContext":{"id":"318736b2-8a29-551b-a4c1-4ea6c9add636","previousPostId":"c9970c6f-2ec3-5beb-adab-7e87dfd0cafe","nextPostId":"6abe76b5-490d-59f6-a195-0f2455825bc0"}},"staticQueryHashes":["2841359383","788015585"]}