{"componentChunkName":"component---src-templates-blog-post-js","path":"/live/小程序实践/","result":{"data":{"site":{"siteMetadata":{"title":"chinley's blog"}},"markdownRemark":{"id":"91a955d8-016c-5d48-a1bd-cc42ca26933c","excerpt":"仅针对原生的微信小程序开发 代码如何模块化 mixins机制 代码实现 组件化 behaviors 封装函数 工程化实践 开发环境优化 支持scss 支持px转rpx 增量编译 eslint检查 CI/CD实践 接口环境切换 性能优化 分包 图片优化 代码按需注入 使用wxs 用wxs实现classnames…","html":"<p>仅针对<strong>原生的微信小程序</strong>开发</p>\n<ul>\n<li>\n<p><a href=\"#%E4%BB%A3%E7%A0%81%E5%A6%82%E4%BD%95%E6%A8%A1%E5%9D%97%E5%8C%96\">代码如何模块化</a></p>\n<ul>\n<li><a href=\"#mixins%E6%9C%BA%E5%88%B6\">mixins机制</a></li>\n<li><a href=\"#%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0\">代码实现</a></li>\n<li><a href=\"#%E7%BB%84%E4%BB%B6%E5%8C%96\">组件化</a></li>\n<li><a href=\"#behaviors\">behaviors</a></li>\n<li><a href=\"#%E5%B0%81%E8%A3%85%E5%87%BD%E6%95%B0\">封装函数</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E5%B7%A5%E7%A8%8B%E5%8C%96%E5%AE%9E%E8%B7%B5\">工程化实践</a></p>\n<ul>\n<li><a href=\"#%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E4%BC%98%E5%8C%96\">开发环境优化</a></li>\n<li><a href=\"#%E6%94%AF%E6%8C%81scss\">支持scss</a></li>\n<li><a href=\"#%E6%94%AF%E6%8C%81px%E8%BD%ACrpx\">支持px转rpx</a></li>\n<li><a href=\"#%E5%A2%9E%E9%87%8F%E7%BC%96%E8%AF%91\">增量编译</a></li>\n<li><a href=\"#eslint%E6%A3%80%E6%9F%A5\">eslint检查</a></li>\n<li><a href=\"#cicd%E5%AE%9E%E8%B7%B5\">CI/CD实践</a></li>\n</ul>\n</li>\n<li><a href=\"#%E6%8E%A5%E5%8F%A3%E7%8E%AF%E5%A2%83%E5%88%87%E6%8D%A2\">接口环境切换</a></li>\n<li>\n<p><a href=\"#%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96\">性能优化</a></p>\n<ul>\n<li><a href=\"#%E5%88%86%E5%8C%85\">分包</a></li>\n<li><a href=\"#%E5%9B%BE%E7%89%87%E4%BC%98%E5%8C%96\">图片优化</a></li>\n<li><a href=\"#%E4%BB%A3%E7%A0%81%E6%8C%89%E9%9C%80%E6%B3%A8%E5%85%A5\">代码按需注入</a></li>\n<li>\n<p><a href=\"#%E4%BD%BF%E7%94%A8wxs\">使用wxs</a></p>\n<ul>\n<li><a href=\"#%E7%94%A8wxs%E5%AE%9E%E7%8E%B0classnames\">用wxs实现classnames</a></li>\n<li><a href=\"#%E6%95%B0%E5%AD%97%E6%A0%BC%E5%BC%8F%E5%8C%96\">数字格式化</a></li>\n<li><a href=\"#%E5%80%92%E8%AE%A1%E6%97%B6\">倒计时</a></li>\n<li><a href=\"#%E6%97%A5%E6%9C%9F%E6%A0%BC%E5%BC%8F%E5%8C%96\">日期格式化</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%85%B6%E4%BB%96\">其他</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%E5%B0%8F%E7%A8%8B%E5%BA%8F%E5%9D%91%E7%82%B9\">小程序坑点</a></p>\n<ul>\n<li><a href=\"#filter%E5%AF%BC%E8%87%B4positionfixed%E5%A4%B1%E6%95%88\">filter导致position:fixed失效</a></li>\n<li>\n<p><a href=\"#%E5%AF%B9image%E8%AE%BE%E7%BD%AEfliterblur%E4%BC%9A%E6%9C%89%E6%AE%8B%E5%BD%B1\">对image设置fliter：blur会有残影</a></p>\n<ul>\n<li><a href=\"#%E7%9B%B8%E5%85%B3%E9%98%85%E8%AF%BB\">相关阅读</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2><a id=\"代码如何模块化\">代码如何模块化</a></h2>\n<p>  随着业务的发展，如果把众多代码都挤在Page里，代码日益膨胀。而且当页面如果出现共有逻辑，依靠复制粘贴的方式十分不优雅， 因此需要模块化去管理。</p>\n<h3><a id=\"mixins机制\">mixins机制</a></h3>\n<p>  借鉴Vue中mixins的机制，把可复用的代码混入当前的代码里。微信小程序里每个页面都有Page(options)函数, mixins的作用就可以是把多个option一起合并, option1,option2,option3……合并进Page函数里。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> account <span class=\"token keyword\">from</span> <span class=\"token string\">'./account'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">Page</span><span class=\"token punctuation\">(</span>\n  <span class=\"token function\">mixins</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">onLoad</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">onShow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  account\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h4>代码实现</h4>\n<p>  基本上就是合并对象的思路，注意函数的执行</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// mixins.js</span>\n<span class=\"token keyword\">const</span> events <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token comment\">// 小程序支持事件</span>\n  <span class=\"token string\">'onLoad'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'onShow'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'onReady'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'onHide'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'onUnload'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'onPullDownRefresh'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'onReachBottom'</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">dest<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>targets</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>dest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> dest<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">let</span> _dest <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> dest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> target <span class=\"token keyword\">of</span> targets<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 多个模块进行mixins</span>\n    <span class=\"token function\">mixins</span><span class=\"token punctuation\">(</span>_dest<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n\n  <span class=\"token keyword\">return</span> _dest<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 把target合并到dest </span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">mixins</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">dest<span class=\"token punctuation\">,</span> target</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>target <span class=\"token operator\">||</span> <span class=\"token operator\">!</span>dest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> dest<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> key <span class=\"token keyword\">in</span> target<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> destValue <span class=\"token operator\">=</span> dest<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> tValue <span class=\"token operator\">=</span> target<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getType</span><span class=\"token punctuation\">(</span>tValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">case</span> <span class=\"token string\">'object'</span><span class=\"token operator\">:</span>\n        dest<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">mixins</span><span class=\"token punctuation\">(</span>destValue <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> tValue<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">case</span> <span class=\"token string\">'array'</span><span class=\"token operator\">:</span>\n        dest<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>destValue <span class=\"token operator\">||</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>Array<span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>tValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> tValue <span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">case</span> <span class=\"token string\">'function'</span><span class=\"token operator\">:</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>events<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// events注册了小程序的生命周期还有一些自定义事件</span>\n          dest<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getType</span><span class=\"token punctuation\">(</span>destValue<span class=\"token punctuation\">)</span> <span class=\"token operator\">===</span> <span class=\"token string\">'function'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 如果dest也定义了该方法，优先执行</span>\n              <span class=\"token function\">destValue</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n\n            <span class=\"token comment\">// target模块的方法执行</span>\n            <span class=\"token function\">tValue</span><span class=\"token punctuation\">.</span><span class=\"token function\">apply</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>tValue<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 非小程序生命周期等通过显式调用触发的，直接赋值</span>\n          dest<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tValue<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n        dest<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> tValue<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> dest<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3><a id=\"组件化\">组件化</a></h3>\n<p>封装一个组件的UI与逻辑，在日常的开发中已经是非常熟悉的事情，在这里列举一下微信小程序特别的用法。</p>\n<h4>behaviors</h4>\n<p>behaviors 是用于组件间代码共享的特性,包含一组属性、数据、生命周期函数和方法。<strong>组件引用它时，它的属性、数据和方法会被合并到组件中，生命周期函数也会在对应时机被调用。</strong>\n最常用的behavior就是微信提供的<strong>wx://component-export</strong>，使自定义组件支持export字段，这个字段可以用于组件被selectComponent调用时返回的值。</p>\n<p>这个一个toast的自定义组件，组件内定义visible和toastTips两个数据，export暴露showToast方法</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// toast.js</span>\n<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  behaviors<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'wx://component-export'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">export</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n    <span class=\"token keyword\">const</span> self <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">showToast</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">tips<span class=\"token punctuation\">,</span> timeout</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      self<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          visible<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n          toastTips<span class=\"token operator\">:</span> tips\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            self<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> visible<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> toastTips<span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> timeout <span class=\"token operator\">||</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> \n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    visible<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// toast是否展示</span>\n    toastTips<span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token comment\">// toast文案</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>调用时父组件/父页面添加toast组件，父组件/父页面通过selectComponent调用showToast。</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">// index.wxml\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>toast</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>toast<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// index.js</span>\n<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">selectComponent</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#toast'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">showToast</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>通过wx://component-export和selectComponent，使得组件逻辑封装在组件内部，类似于React的useImperativeHandle+ref,避免在父组件做过多处理。</p>\n<h3><a id=\"封装函数\">封装函数</a></h3>\n<p>组件化部分我们实现了一个toast组件，一个页面需要调用一次this.selectComponent(‘#toast’).showToast(‘hello’)方法，十个页面那就需要调用十次，有没有更加快捷方法呢？\n微信小程序里封装函数有个技巧，可以利用<strong>getCurrentPages</strong>方法获取到页面栈，页面栈获取当前页面，就能拿到当前页面的数据、方法。</p>\n<p>因此可以通过getCurrentPages来封装一个showToast方法, 如果当前页面有toast组件，调起toast组件的showToast方法</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// util.js</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> pages <span class=\"token operator\">=</span> <span class=\"token function\">getCurrentPages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> pages<span class=\"token punctuation\">[</span>pages<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//获取当前页面</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">showToast</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">tips</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> context <span class=\"token operator\">=</span> <span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> showToast <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> context<span class=\"token punctuation\">.</span><span class=\"token function\">selectComponent</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#toast'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>showToast<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">showToast</span><span class=\"token punctuation\">(</span>tips<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// index.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> showToast <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'util.js'</span>\n……\n<span class=\"token function\">showToast</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n……</code></pre></div>\n<p>这样就可以封装更多的公共方法供页面/组件<strong>直接调用</strong>，比方说获取页面路径参数</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> curRouteOptions <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//缓存 避免多次请求</span>\n<span class=\"token keyword\">let</span> curPageInfoPromise <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> curRoute <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getPageInfo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">defalutOptions</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> pages <span class=\"token operator\">=</span> <span class=\"token function\">getCurrentPages</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> currentPage <span class=\"token operator\">=</span> pages<span class=\"token punctuation\">[</span>pages<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">let</span> options <span class=\"token operator\">=</span> currentPage<span class=\"token operator\">?.</span>options <span class=\"token operator\">||</span> defalutOptions <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> route <span class=\"token operator\">=</span> currentPage<span class=\"token operator\">?.</span>route <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">hasOptionsChange</span><span class=\"token punctuation\">(</span>curRouteOptions<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>curPageInfoPromise <span class=\"token operator\">&amp;&amp;</span> curRoute <span class=\"token operator\">===</span> route<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n    <span class=\"token keyword\">return</span> curPageInfoPromise<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  curRouteOptions <span class=\"token operator\">=</span> options<span class=\"token punctuation\">;</span>\n  curRoute <span class=\"token operator\">=</span> route<span class=\"token punctuation\">;</span>\n  \n  curPageInfoPromise <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">reolve</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> sceneInfo <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span>\n      scene\n    <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> options <span class=\"token operator\">||</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>scene<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      sceneInfo <span class=\"token operator\">=</span> <span class=\"token function\">parseUrl</span><span class=\"token punctuation\">(</span><span class=\"token function\">decodeURIComponent</span><span class=\"token punctuation\">(</span>scene<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">reolve</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>options<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>sceneInfo <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>res<span class=\"token operator\">?.</span>urlQueryObj<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> decodeQuery <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n        decodeQuery <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">parse</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>urlQueryObj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n  \n      res <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">...</span>res<span class=\"token punctuation\">,</span>\n        <span class=\"token operator\">...</span>decodeQuery\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">delete</span> res<span class=\"token punctuation\">.</span>urlQueryObj<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'getPageInfo'</span><span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> Promise<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> curPageInfoPromise<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">hasOptionsChange</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">pre<span class=\"token punctuation\">,</span> cur</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>pre<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">let</span> hasChange <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  Object<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span>cur<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">[</span>curKey<span class=\"token punctuation\">,</span> curValue<span class=\"token punctuation\">]</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>curValue <span class=\"token operator\">!==</span> pre<span class=\"token punctuation\">[</span>curKey<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      hasChange <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> hasChange<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2><a id=\"工程化实践\">工程化实践</a></h2>\n<p>微信小程序工程化围绕<strong>本地项目运行</strong>和<strong>持续集成</strong>两方面进行实践，通过工程化提高开发效率和质量。</p>\n<h3><a id=\"开发环境优化\">开发环境优化</a></h3>\n<p>现有主流的构建工具有webpack、gulp、grunt等, 最终采用的是gulp，gulp是基于文件流的工具，对文件读取是<strong>流式操作</strong>，一次 I/O 可以处理多个任务，还有就是<strong>代码驱动</strong>，写任务就是写代码。grunt虽然也是基于文件流的工具，但它是<strong>配置驱动</strong>，需要了解各种插件的功能再配置进去，学习成本比较高。webpack侧重的是前端资源<strong>模块化管理和打包</strong>，不太适用于小程序的场景。</p>\n<h4><a id=\"支持scss\">支持scss</a></h4>\n<p>引入gulp-dart-sass和rename包，支持scss编译出wxss</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> sass <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp-dart-sass'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rename <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp-rename'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sass'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> gulp\n    <span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./**/*.scss'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">sass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> outputStyle<span class=\"token operator\">:</span> <span class=\"token string\">'expanded'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> sass<span class=\"token punctuation\">.</span>logError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">rename</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        extname<span class=\"token operator\">:</span> <span class=\"token string\">'.wxss'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4><a id=\"支持px转rpx\">支持px转rpx</a></h4>\n<p>UI稿是px的单位，但是微信小程序的样式单位是rpx，通过自动化转换避免手动修改，支持720/750基准。自定义一个gulp插件，使插件更贴合业务。\n写自定义gulp插件需要through2、plugin-error包，通过through2传递文件流，PluginError暴露gulp插件错误。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// px2rpx.js</span>\n<span class=\"token keyword\">const</span> PluginError <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'plugin-error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> through <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'through2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">PLUGIN_NAME</span> <span class=\"token operator\">=</span> <span class=\"token string\">'gulp-px2rpx'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> defaultConfig <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  unit<span class=\"token operator\">:</span> <span class=\"token string\">'rpx'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 单位</span>\n  replaceUnit<span class=\"token operator\">:</span> <span class=\"token string\">'px'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 被替换的</span>\n  wxappScreenWidth<span class=\"token operator\">:</span> <span class=\"token number\">750</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 微信小程序屏幕</span>\n  remPrecision<span class=\"token operator\">:</span> <span class=\"token number\">6</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> ScssRuleItems <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">72</span><span class=\"token punctuation\">,</span> <span class=\"token number\">75</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">gulpPx2Rpx</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  options <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> defaultConfig<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> reg <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'([\\\\d.]*\\\\d)'</span> <span class=\"token operator\">+</span> options<span class=\"token punctuation\">.</span>replaceUnit<span class=\"token punctuation\">,</span> <span class=\"token string\">'g'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> remPrecision <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>remPrecision<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">function</span> <span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">val</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">parseFloat</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">.</span><span class=\"token function\">toFixed</span><span class=\"token punctuation\">(</span>remPrecision<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>options<span class=\"token punctuation\">.</span>unit<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> through<span class=\"token punctuation\">.</span><span class=\"token function\">obj</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">file<span class=\"token punctuation\">,</span> enc<span class=\"token punctuation\">,</span> cb</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">isNull</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> filePath <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> screenWidth <span class=\"token operator\">=</span> ScssRuleItems<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> filePath<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">||</span> <span class=\"token number\">72</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> radio <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span>wxappScreenWidth <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span>screenWidth <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">.</span><span class=\"token function\">isStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PluginError</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PLUGIN_NAME</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Streaming not supported'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> newContent <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span>contents<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>reg<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">m<span class=\"token punctuation\">,</span>p1</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span>p1 <span class=\"token operator\">*</span> radio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      file<span class=\"token punctuation\">.</span>contents <span class=\"token operator\">=</span> Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>newContent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      file<span class=\"token punctuation\">.</span>path <span class=\"token operator\">=</span> filePath<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>screenWidth<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">PluginError</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PLUGIN_NAME</span><span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> gulpPx2Rpx<span class=\"token punctuation\">;</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// gulpfile.js</span>\n<span class=\"token keyword\">const</span> px2rpx <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./px2rpx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> sass <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp-dart-sass'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rename <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp-rename'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sass'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> gulp\n    <span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./**/*.scss'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">px2rpx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 执行px转rpx</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">sass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> outputStyle<span class=\"token operator\">:</span> <span class=\"token string\">'expanded'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> sass<span class=\"token punctuation\">.</span>logError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">rename</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        extname<span class=\"token operator\">:</span> <span class=\"token string\">'.wxss'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4><a id=\"增量编译\">增量编译</a></h4>\n<p>gulp.watch时是当某个目录下的任一一个文件有改动时，会一次性地把目录下的文件全部执行一次task，相当于目录下的全量编译。文件日益增多，稍有改动就会引起全量编译，这是不太合理的。\n这时可以引用gulp-cached插件,这个插件将构建过的文件生成一个hash，缓存在内存中，当该文件更新的时候，才会返回这个文件流，给gulp执行下一步。</p>\n<p>拿pxTorpx的例子来说，在px2rpx执行之前使用gulp-cached即可</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// gulpfile.js</span>\n<span class=\"token keyword\">const</span> px2rpx <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./px2rpx'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> cached <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp-cached'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> rename <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp-rename'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'sass'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> gulp\n    <span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./**/*.scss'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">cached</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cacheSass'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// cacheSass是一个任务命名，区别其他的cache</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">px2rpx</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 执行px转rpx</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">sass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> outputStyle<span class=\"token operator\">:</span> <span class=\"token string\">'expanded'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> sass<span class=\"token punctuation\">.</span>logError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>\n      <span class=\"token function\">rename</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        extname<span class=\"token operator\">:</span> <span class=\"token string\">'.wxss'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4><a id=\"eslint检查\">eslint检查</a></h4>\n<p>工程化不仅可以用于提高开发效率，也可以提高开发质量。eslint是最主流的代码检测工具，webpack中在rules里配置eslint-loader，而在gulp中可以使用gulp-eslint插件，添加一个gulp任务执行eslint检查。\n因为项目是到后期才添加eslint, 已经有很多的代码，如果对所有文件都执行eslint检查，修改错误就要修改好几天，因此这里做了一个特殊处理，与主分支的代码有区别才进行检测。相当于改了什么文件，就顺带把eslint错误都一起处理了吧~\n再加上husky，支持本地运行eslint和commit代码前的强制检测。</p>\n<ol>\n<li>引入gulp-eslint插件，配置.eslintrc.js规则</li>\n<li>引入husky和lint-staged, husky是让<strong>配置git钩子变得更简单的工具</strong>，支持所有的git钩子。lint-staged是<strong>在git暂存区上运行linters的工具</strong>，在package.json文件中配置husky和lint-staged字段</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"husky\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"hooks\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"pre-commit\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"npx lint-staged --no-stash\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"lint-staged\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"miniapp/**/*.js\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"eslint  --fix --color\"</span>\n    <span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"3\">\n<li>添加gulp-eslint任务</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> eslint <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp-eslint'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> exec <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'child_process'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>exec<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">GITDIFF</span> <span class=\"token operator\">=</span> <span class=\"token string\">'git add . &amp;&amp; git diff HEAD --diff-filter=ACMR --name-only'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 与主分支的文件比较</span>\n\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'checkEslint'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">done</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">exec</span><span class=\"token punctuation\">(</span><span class=\"token constant\">GITDIFF</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error<span class=\"token punctuation\">,</span> stdout</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">exec error: </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>error<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> diffFileArray <span class=\"token operator\">=</span> stdout<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">diffFile</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n        <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">(\\.js)(\\n|$)</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">gi</span></span><span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>diffFile<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>diffFileArray<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> gulp\n      <span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span>diffFileArray<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">eslint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>eslint<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>eslint<span class=\"token punctuation\">.</span><span class=\"token function\">failAfterError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 在控制台输出错误</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ol start=\"4\">\n<li>一些es6以上的语法例如可选链?.也会被eslint检测为有问题的代码，因此还需要添加babel-eslint来支持。\n在.eslintrc.js文件中添加对babel的配置</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">...\n  <span class=\"token property\">\"parser\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"babel-eslint\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"parserOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"ecmaVersion\"</span><span class=\"token operator\">:</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"sourceType\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"module\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n...</code></pre></div>\n<h3><a id=\"CI/CD实践\">CI/CD实践</a></h3>\n<p>微信提供了miniprogram-ci供开发者调用，进行小程序代码的上传、预览等操作，减少频繁的手动处理。可以结合gitlab+miniprogram-ci实现自动化上传体验版</p>\n<ul>\n<li>微信公众平台-开发 - 开发设置里设置秘钥和IP白名单，只在白名单里的IP才能调用相关接口。</li>\n<li>下载秘钥到项目里，添加上传代码</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> ci <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'miniprogram-ci'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> project <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ci<span class=\"token punctuation\">.</span>Project</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  appid<span class=\"token operator\">:</span> <span class=\"token string\">'wxsomeappid'</span><span class=\"token punctuation\">,</span>\n  type<span class=\"token operator\">:</span> <span class=\"token string\">'miniProgram'</span><span class=\"token punctuation\">,</span>\n  projectPath<span class=\"token operator\">:</span> <span class=\"token string\">'the/project/path'</span><span class=\"token punctuation\">,</span>\n  privateKeyPath<span class=\"token operator\">:</span> <span class=\"token string\">'the/privatekey/path'</span><span class=\"token punctuation\">,</span>\n  ignores<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'node_modules/**/*'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">upload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> ci<span class=\"token punctuation\">.</span><span class=\"token function\">upload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    project<span class=\"token operator\">:</span> project<span class=\"token punctuation\">,</span>\n    version<span class=\"token operator\">:</span> <span class=\"token string\">'1.0.0'</span><span class=\"token punctuation\">,</span>\n    desc<span class=\"token operator\">:</span> <span class=\"token string\">'xxxx'</span><span class=\"token punctuation\">,</span>\n    setting<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      es6<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      es7<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      minify<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      codeProtect<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      autoPrefixWXSS<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    onProgressUpdate<span class=\"token operator\">:</span> console<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>gitlab中项目设置-tiggers-add trigger, 在该页面查询项目的token和url</li>\n<li>配置deploy keys, gitlab项目设置中-deploy keys</li>\n<li>配置项目 gitlab runner 客户端实例</li>\n<li>项目里添加.gitlab-ci.yml文件,大致分为这几个步骤</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"yml\"><pre class=\"language-yml\"><code class=\"language-yml\"><span class=\"token key atrule\">stages</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> 安装依赖\n  <span class=\"token punctuation\">-</span> 构建npm\n  <span class=\"token punctuation\">-</span> 上传\n  <span class=\"token punctuation\">-</span> 通知</code></pre></div>\n<ul>\n<li>\n<p>给项目增加webhooks用来触发ci/cd</p>\n<ul>\n<li>gitlab pipeline钩子  gitlab 中”项目设置“ - ”Integrations“ 增加以下 WebHook</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">Merge Requests Events | Push Events\nPush Events\nMerge Requests Events</code></pre></div>\n<ul>\n<li>添加统一账号为仓库Master</li>\n</ul>\n</li>\n<li>跟企业微信机器人项目联动，通知到个人</li>\n</ul>\n<h2><a id=\"接口环境切换\">接口环境切换</a></h2>\n<p>项目有开发环境、预发布环境和正式环境，但是开发版/体验版的小程序只有一个。当需要不同接口环境时，可以在某个隐藏入口(只有开发版和体验版可以)设置长按，弹出选择环境的选项，选择完后storage记住该选项。重新打开时读取storage选项，把接口切换到storage记录的环境</p>\n<h2><a id=\"性能优化\">性能优化</a></h2>\n<h3><a id=\"分包\">分包</a></h3>\n<p>微信小程序单个分包或者是主包，大小不可以超过2M。业务在持续迭代的过程中可能很容易超过这个大小，因此需要对小程序进行分包。\n在app.json的subpackages 字段配置分包结构，就可以将小程序划分成不同的子包，在使用过程中按需加载，优化小程序首次启动的下载时间。</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token comment\">// app.json</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"subpackages\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"root\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"packageA\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"pages\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"pages/a/a\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"pages/a/b\"</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"root\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"packageB\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"pages\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"pages/b/a\"</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"root\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"packageC\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"pages\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"pages/c/a\"</span>\n      <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3><a id=\"图片优化\">图片优化</a></h3>\n<ul>\n<li>图片资源使用CDN非项目内引用: 需要控制包的大小，图片的大小会增加包的体积</li>\n<li>图片推荐用webp格式：与png相比，同样是无损的压缩，但是图片文件大小能减少50%</li>\n<li>image元素设置lazyload</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>image</span> <span class=\"token attr-name\">lazy-load</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{true}}<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span></code></pre></div>\n<ul>\n<li>图片裁剪大小：缩小尺寸</li>\n</ul>\n<h3><a id=\"代码按需注入\">代码按需注入</a></h3>\n<p>在app.json中开启<strong>按需注入</strong>，降低小程序的启动时间和运行时间</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"lazyCodeLoading\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"requiredComponents\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3><a id=\"使用wxs\">使用wxs</a></h3>\n<p>wxs运行在视图层，对一些数据的格式化例如时间戳转日期、倒计时等可以优先考虑使用wxs函数。如果是在js文件中特地开辟字段赋值，再经过逻辑层和视图层的setData数据交互，会有一定的耗时，如果是频繁触发的例如像倒计时，就会有更多的消耗。\n不过使用wxs文件也有一个弊端，语法跟js不一样，数据类型能支持的函数也不同，比如不支持es6语法，最坑就是不支持Object遍历！ 有一定的学习成本。\n记录下在项目中用到wxs函数。</p>\n<h5>用wxs实现classnames</h5>\n<p>在react开发中经常使用classnames，可以写个小程序版的classnames，支持不同条件选择不同类名</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">getObjectKeyAndVal</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">obj<span class=\"token punctuation\">,</span> cb</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> str <span class=\"token operator\">=</span> <span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> reg <span class=\"token operator\">=</span> <span class=\"token function\">getRegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\"(\\w)+\":'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'g'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> matchArr <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>matchArr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> matchArr<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">var</span> objKey <span class=\"token operator\">=</span> matchArr<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      objKey <span class=\"token operator\">=</span> objKey<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      objKey <span class=\"token operator\">=</span> objKey<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\":'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      cb <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span>objKey<span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">[</span>objKey<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">classNames</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">var</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> arguments<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"String\"</span> <span class=\"token operator\">===</span> arguments<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>constructor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      result<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Object\"</span> <span class=\"token operator\">===</span> arguments<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>constructor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">getObjectKeyAndVal</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">key<span class=\"token punctuation\">,</span> value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          result<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">var</span> res <span class=\"token operator\">=</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>classNames <span class=\"token operator\">=</span> classNames<span class=\"token punctuation\">;</span></code></pre></div>\n<h5>数字格式化</h5>\n<p>12000 转换成1.2万</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">var</span> <span class=\"token function-variable function\">formatNumber</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> re <span class=\"token operator\">=</span> <span class=\"token function\">getRegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(\\d{1,3})(?=(\\d{3})+(?:$|\\.))\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'g'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> num<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">,</span> <span class=\"token string\">'$1,'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>formatNumber <span class=\"token operator\">=</span> formatNumber<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">translateNumber</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">,</span> base <span class=\"token operator\">=</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">,</span> unit <span class=\"token operator\">=</span> <span class=\"token string\">'万'</span><span class=\"token punctuation\">,</span> pointCount <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">''</span> <span class=\"token operator\">===</span> num <span class=\"token operator\">||</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">==</span> num <span class=\"token operator\">||</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">===</span> num<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> num<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> num <span class=\"token operator\">===</span> <span class=\"token string\">'string'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    num <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>num <span class=\"token operator\">>=</span> base<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    result <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">/</span> base<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> pointCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> pointCount<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> unit<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    result <span class=\"token operator\">=</span> num<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>translateNumber <span class=\"token operator\">=</span> translateNumber<span class=\"token punctuation\">;</span></code></pre></div>\n<h5>倒计时</h5>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/**\n * 时间格式化\n *\n * @example\n *   formatTime(60, 'hh:mm:ss')  // 00:01:00\n *\n * @param  {Number} second - 秒数\n * @param  {String} format - 格式化模板\n * @return {String}        - 格式化字符串\n */</span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">formatTimePro</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>second<span class=\"token punctuation\">,</span> format <span class=\"token operator\">=</span> <span class=\"token string\">\"hh:mm:ss\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> values <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"(D+)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"(h+)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"(m+)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"(s+)\"</span><span class=\"token punctuation\">]</span>\n\n  <span class=\"token keyword\">var</span> day <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>second <span class=\"token operator\">/</span> <span class=\"token number\">86400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> hour <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>second <span class=\"token operator\">/</span> <span class=\"token number\">3600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> minute <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>second <span class=\"token operator\">%</span> <span class=\"token number\">3600</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> seconds <span class=\"token operator\">=</span> <span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>second <span class=\"token operator\">%</span> <span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> times <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>day<span class=\"token punctuation\">,</span> hour<span class=\"token punctuation\">,</span> minute<span class=\"token punctuation\">,</span> seconds<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> values<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> reg <span class=\"token operator\">=</span> <span class=\"token function\">getRegExp</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>reg<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">var</span> match  <span class=\"token operator\">=</span> format<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> value  <span class=\"token operator\">=</span> times<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> length <span class=\"token operator\">=</span> value<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">===</span> length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      value  <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span> <span class=\"token operator\">+</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> format<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>formatTimePro <span class=\"token operator\">=</span> formatTimePro<span class=\"token punctuation\">;</span></code></pre></div>\n<h5>日期格式化</h5>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/**\n * 日期时间格式化\n * @param {number} time 毫秒时间戳\n * @param {*} fmt 格式化\n */</span>\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">formatDate</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">time<span class=\"token punctuation\">,</span> fmt</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">var</span> date <span class=\"token operator\">=</span> <span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> regArr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"(M+)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"(d+)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"(h+)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"(H+)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"(m+)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"(s+)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"(q+)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"(S+)\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> regRes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">getMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getDate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">12</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> <span class=\"token number\">12</span> <span class=\"token operator\">:</span> date<span class=\"token punctuation\">.</span><span class=\"token function\">getHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">getHours</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">getMinutes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">getSeconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">getMonth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">getMilliseconds</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> week <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">'0'</span><span class=\"token operator\">:</span> <span class=\"token string\">'/u65e5'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'1'</span><span class=\"token operator\">:</span> <span class=\"token string\">'/u4e00'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'2'</span><span class=\"token operator\">:</span> <span class=\"token string\">'/u4e8c'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'3'</span><span class=\"token operator\">:</span> <span class=\"token string\">'/u4e09'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'4'</span><span class=\"token operator\">:</span> <span class=\"token string\">'/u56db'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'5'</span><span class=\"token operator\">:</span> <span class=\"token string\">'/u4e94'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'6'</span><span class=\"token operator\">:</span> <span class=\"token string\">'/u516d'</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> reg <span class=\"token operator\">=</span> <span class=\"token function\">getRegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(y+)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>reg<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>fmt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> match  <span class=\"token operator\">=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    fmt <span class=\"token operator\">=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">getFullYear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">substr</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span> <span class=\"token operator\">-</span> match<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  reg <span class=\"token operator\">=</span> <span class=\"token function\">getRegExp</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(E+)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>reg<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>fmt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> match  <span class=\"token operator\">=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    fmt <span class=\"token operator\">=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">2</span> <span class=\"token operator\">?</span> <span class=\"token string\">'/u661f/u671f'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'/u5468'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> week<span class=\"token punctuation\">[</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">getDay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">''</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> regArr<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">result<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> reg <span class=\"token operator\">=</span> <span class=\"token function\">getRegExp</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>reg<span class=\"token punctuation\">.</span><span class=\"token function\">test</span><span class=\"token punctuation\">(</span>fmt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">var</span> match  <span class=\"token operator\">=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">match</span><span class=\"token punctuation\">(</span>reg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> value  <span class=\"token operator\">=</span> regRes<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> length <span class=\"token operator\">=</span> value<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">===</span> length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      value  <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span> <span class=\"token operator\">+</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> fmt<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports<span class=\"token punctuation\">.</span>formatDate <span class=\"token operator\">=</span> formatDate<span class=\"token punctuation\">;</span></code></pre></div>\n<h3>其他</h3>\n<p>其他的就贴官方建议吧\n<a href=\"https://developers.weixin.qq.com/miniprogram/dev/framework/performance/tips/start.html\">https://developers.weixin.qq.com/miniprogram/dev/framework/performance/tips/start.html</a></p>\n<h2><a id=\"小程序坑点\">小程序坑点</a></h2>\n<h3>filter导致position:fixed失效</h3>\n<p>如果子元素有absolute和fixed定位，加上filter导致样式混乱。\nfixed元素会被移出正常文档流，通过元素相对于屏幕视口的位置来指定元素位置。当元素祖先的<strong>transform</strong>、<strong>perspective</strong>或<strong>filter</strong>非none时，容器由视口改为<strong>该祖先</strong></p>\n<p>因此小程序只能给对应元素加，不能全局加</p>\n<h3>对image设置fliter：blur会有残影</h3>\n<p>具体表现就是image中间会有一条黑线，解决是设置translateZ，开启3d渲染\ntransform: translateZ(0);</p>\n<h6>相关阅读</h6>\n<p><a href=\"https://juejin.cn/post/7172392052817149960\">别再被小程序全页变灰给坑了</a></p>\n<p>……to be continued</p>","frontmatter":{"title":"微信小程序实践","date":"December 23, 2022","description":"微信小程序开发总结"}},"previous":{"fields":{"slug":"/live/流媒体视频基础/"},"frontmatter":{"title":"流媒体视频基础"}},"next":{"fields":{"slug":"/foundamention/html/灰度/"},"frontmatter":{"title":"灰度思路"}}},"pageContext":{"id":"91a955d8-016c-5d48-a1bd-cc42ca26933c","previousPostId":"c930d7eb-9f41-5a07-82fe-6fbd862022c1","nextPostId":"866cde58-4112-5e7e-b7f0-1ac8ef76beb4"}},"staticQueryHashes":["2841359383","788015585"]}