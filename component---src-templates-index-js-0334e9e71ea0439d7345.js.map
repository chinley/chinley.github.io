{"version":3,"sources":["webpack://gatsby-starter-blog/./src/templates/index.js"],"names":["data","location","pageContext","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","totalPage","currentPage","length","style","listStyle","map","post","frontmatter","fields","slug","key","className","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","display","flexWrap","justifyContent","padding","rel"],"mappings":"gNA2FA,UAlFkB,SAAC,GAAqC,IAAD,EAAlCA,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC7BC,GAAY,UAAAH,EAAKI,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQP,EAAKQ,kBAAkBC,MAC7BC,EAA2BR,EAA3BQ,UAAWC,EAAgBT,EAAhBS,YACnB,OAAqB,IAAjBJ,EAAMK,OAEN,gBAAC,IAAD,CAAQX,SAAUA,EAAUK,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAM,cACX,gBAAC,IAAD,MACA,uLAUJ,gBAAC,IAAD,CAAQL,SAAUA,EAAUK,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAM,cACX,gBAAC,IAAD,MACA,gBAAC,IAAD,MACA,sBAAIO,MAAO,CAAEC,UAAU,SACpBP,EAAMQ,KAAI,SAAAC,GACT,IAAMV,EAAQU,EAAKC,YAAYX,OAASU,EAAKE,OAAOC,KAEpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACEE,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIT,EAAKE,OAAOC,KAAMO,SAAS,OACnC,wBAAMA,SAAS,YAAYpB,KAG/B,6BAAQU,EAAKC,YAAYU,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQb,EAAKC,YAAYa,aAAed,EAAKe,SAE/CL,SAAS,uBAQvB,uBACEb,MAAO,CACPmB,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfpB,UAAU,OACVqB,QAAS,IAERxB,EAAc,EAAI,GACjB,gBAAC,EAAAa,KAAD,CACEC,GAAI,KAAOd,EAAc,GAAM,EAAI,GAAKA,EAAc,GACtDyB,IAAI,QAFN,SAODzB,EAAc,GAAKD,GAClB,gBAAC,EAAAc,KAAD,CAAMC,GAAI,KAAOd,EAAc,GAAIyB,IAAI,QAAvC,UAKJ,gBAAC,IAAD","file":"component---src-templates-index-js-0334e9e71ea0439d7345.js","sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Clock from \"../components/clock\"\nimport Bear from \"../components/Bear\";\n\nconst BlogIndex = ({ data, location, pageContext }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n  const { totalPage, currentPage } = pageContext;\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <Bio />\n      <Clock />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n      <div \n        style={{\n        display: `flex`,\n        flexWrap: `wrap`,\n        justifyContent: `space-between`,\n        listStyle: `none`,\n        padding: 0,\n      }}>\n        {currentPage - 1 > 0 && (\n          <Link\n            to={'/' + (currentPage - 1 === 1 ? '' : currentPage - 1)}\n            rel=\"prev\"\n          >\n            ← 上一页\n          </Link>\n        )}\n        {currentPage + 1 <= totalPage && (\n          <Link to={'/' + (currentPage + 1)} rel=\"next\">\n            下一页 →\n          </Link>\n        )}\n      </div>\n      <Bear />\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query BlogIndexQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}