{"version":3,"sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/category.js"],"names":["data","useStaticQuery","author","site","siteMetadata","description","className","S","layout","formats","src","width","height","quality","alt","summary","location","pageContext","siteTitle","title","posts","allMarkdownRemark","nodes","totalPage","currentPage","category","categories","length","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","excerpt","display","flexWrap","justifyContent","padding","rel","position","right","top","borderLeft","marginBottom","textDecoration","color","item"],"mappings":"y4BAwDA,IA7CY,WAAO,IAAD,IACVA,GAAOC,oBAAe,aActBC,EAAM,UAAGF,EAAKG,KAAKC,oBAAb,aAAG,EAAwBF,OACjCG,EAAW,UAAGL,EAAKG,KAAKC,oBAAb,aAAG,EAAwBC,YAE5C,OACE,uBAAKC,UAAU,OACb,gBAAC,EAAAC,EAAD,CACED,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,yBACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBARN,sBAUA,2BACE,yBACGT,GAAe,KADlB,KAIA,0BACGH,aAAA,EAAAA,EAAQa,UAAW,KADtB,S,mHCiER,UAtGiB,SAAC,GAAqC,IAAD,EAAlCf,EAAkC,EAAlCA,KAAMgB,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC5BC,GAAY,UAAAlB,EAAKG,KAAKC,oBAAV,eAAwBe,QAAxB,QACZC,EAAQpB,EAAKqB,kBAAkBC,MAC7BC,EAAiDN,EAAjDM,UAAWC,EAAsCP,EAAtCO,YAAaC,EAAyBR,EAAzBQ,SAAUC,EAAeT,EAAfS,WAC1C,OAAqB,IAAjBN,EAAMO,OAEN,gBAAC,IAAD,CAAQX,SAAUA,EAAUG,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,uLAUJ,gBAAC,IAAD,CAAQH,SAAUA,EAAUG,MAAOD,GACjC,gBAAC,IAAD,CAAKC,MAAM,cACX,gBAAC,IAAD,MACA,gBAAC,IAAD,MACA,sBAAIS,MAAO,CAAEC,UAAU,SACnB,kCACE,+BAAOJ,IAEVL,EAAMU,KAAI,SAAAC,GACT,IAAMZ,EAAQY,EAAKC,YAAYb,OAASY,EAAKE,OAAOC,KACpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACE5B,UAAU,iBACV8B,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAD,CAAMC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnC,wBAAMA,SAAS,YAAYrB,KAG/B,6BAAQY,EAAKC,YAAYS,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAY3B,aAAe0B,EAAKa,SAE/CJ,SAAS,uBAQvB,uBACEZ,MAAO,CACPiB,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACflB,UAAU,OACVmB,QAAS,IAERxB,EAAc,EAAI,GACjB,gBAAC,EAAAc,KAAD,CACEC,GAAI,KAAOf,EAAc,GAAM,EAAI,GAAKA,EAAc,GACtDyB,IAAI,QAFN,SAODzB,EAAc,GAAKD,GAClB,gBAAC,EAAAe,KAAD,CAAMC,GAAI,KAAOf,EAAc,GAAIyB,IAAI,QAAvC,UAKJ,gBAAC,IAAD,MACA,uBAAK3C,UAAU,WAAWsB,MAAO,CAC7BsB,SAAU,WACVC,MAAO,QACPC,IAAK,QACLC,WAAY,2BACZL,QAAS,mBAEX,uBAAKpB,MAAO,CAAE0B,aAAc,OAAQC,eAAgB,SACpD,gBAAC,EAAAjB,KAAD,CAAMC,GAAE,IAAOC,SAAS,MAAMZ,MAAO,CAAE2B,eAAgB,OAAQC,MAAO,YAClE,wBAAMhB,SAAS,YAAf,QAGFd,GAAcA,EAAWI,KAAI,SAAA2B,GAAI,OAAI,uBAAK7B,MAAO,CAAE0B,aAAc,OAAQC,eAAgB,SACzF,gBAAC,EAAAjB,KAAD,CAAMC,GAAE,eAAiBkB,EAAQjB,SAAS,MAAMZ,MAAO,CAAE2B,eAAgB,OAAQC,MAAO,YACtF,wBAAMhB,SAAS,YAAYiB","file":"component---src-templates-category-js-6dd1d02ee03b7b4cd1de.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          description\n        }\n      }\n    }\n  `)\n\n  const author = data.site.siteMetadata?.author;\n  const description = data.site.siteMetadata?.description\n\n  return (\n    <div className=\"bio\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n        src=\"../images/chinley.jpeg\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      <div>        \n        <p>\n          {description || null}\n          {` `}\n        </p>\n        <p>\n          {author?.summary || null}\n          {` `}\n        </p>\n\n      </div>\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Clock from \"../components/clock\"\nimport Bear from \"../components/Bear\";\n\nconst Category = ({ data, location, pageContext }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n  const { totalPage, currentPage, category, categories } = pageContext;\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Seo title=\"All posts\" />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo title=\"All posts\" />\n      <Bio />\n      <Clock />\n      <ol style={{ listStyle: `none` }}>\n          <blockquote>\n            <p>标签：{category}</p>\n          </blockquote>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n      <div \n        style={{\n        display: `flex`,\n        flexWrap: `wrap`,\n        justifyContent: `space-between`,\n        listStyle: `none`,\n        padding: 0,\n      }}>\n        {currentPage - 1 > 0 && (\n          <Link\n            to={'/' + (currentPage - 1 === 1 ? '' : currentPage - 1)}\n            rel=\"prev\"\n          >\n            ← 上一页\n          </Link>\n        )}\n        {currentPage + 1 <= totalPage && (\n          <Link to={'/' + (currentPage + 1)} rel=\"next\">\n            下一页 →\n          </Link>\n        )}\n      </div>\n      <Bear />\n      <div className=\"cate-box\" style={{\n          position: 'absolute',\n          right: '10rem',\n          top: '17rem',\n          borderLeft: '1px solid RGB(146,25,41)',\n          padding: '5px 0 5px 20px'\n      }}>\n        <div style={{ marginBottom: '20px', textDecoration: 'none'}}>\n        <Link to={`/`} itemProp=\"url\" style={{ textDecoration: 'none', color: '#4f5969'}}>\n            <span itemProp=\"headline\">首页</span>\n          </Link>\n        </div>\n        { categories && categories.map(item => <div style={{ marginBottom: '20px', textDecoration: 'none'}}>\n          <Link to={`/categories/${item}`} itemProp=\"url\" style={{ textDecoration: 'none', color: '#4f5969'}}>\n            <span itemProp=\"headline\">{item}</span>\n          </Link>\n        </div>) }\n      </div>\n    </Layout>\n  )\n}\n\nexport default Category\n\nexport const pageQuery = graphql`\n  query CategoryQuery($category: String, $skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      filter: {frontmatter: {category: {eq: $category}}}\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          category\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}